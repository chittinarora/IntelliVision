# Generated by Django 5.2.3 on 2025-06-26 17:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VideoJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('done', 'Done'), ('failed', 'Failed')], default='pending', help_text='Current status of the job.', max_length=20)),
                ('input_video', models.FileField(help_text='Input video file for processing.', upload_to='uploads/')),
                ('output_video', models.FileField(blank=True, help_text='Output video file after processing.', null=True, upload_to='outputs/')),
                ('output_image', models.ImageField(blank=True, help_text='Output image file after processing (if applicable).', null=True, upload_to='outputs/')),
                ('job_type', models.CharField(choices=[('people_count', 'People Counting'), ('emergency_count', 'Emergency Analysis'), ('car_count', 'Car Counting'), ('pothole_detection', 'Pothole Detection'), ('food_waste_estimation', 'Food Waste Estimation'), ('pest_monitoring', 'Pest Monitoring'), ('wildlife_detection', 'Wildlife Detection')], default='people_count', help_text='Type of analytics job.', max_length=50)),
                ('results', models.JSONField(blank=True, help_text='Results of the analytics job.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Job creation timestamp.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Job last updated timestamp.')),
                ('line1_start_x', models.FloatField(blank=True, help_text='Start X for line 1 (emergency_count)', null=True)),
                ('line1_start_y', models.FloatField(blank=True, help_text='Start Y for line 1 (emergency_count)', null=True)),
                ('line1_end_x', models.FloatField(blank=True, help_text='End X for line 1 (emergency_count)', null=True)),
                ('line1_end_y', models.FloatField(blank=True, help_text='End Y for line 1 (emergency_count)', null=True)),
                ('line2_start_x', models.FloatField(blank=True, help_text='Start X for line 2 (emergency_count)', null=True)),
                ('line2_start_y', models.FloatField(blank=True, help_text='Start Y for line 2 (emergency_count)', null=True)),
                ('line2_end_x', models.FloatField(blank=True, help_text='End X for line 2 (emergency_count)', null=True)),
                ('line2_end_y', models.FloatField(blank=True, help_text='End Y for line 2 (emergency_count)', null=True)),
                ('video_width', models.IntegerField(blank=True, help_text='Width of the input video (optional)', null=True)),
                ('video_height', models.IntegerField(blank=True, help_text='Height of the input video (optional)', null=True)),
                ('user', models.ForeignKey(help_text='User who submitted the job.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]

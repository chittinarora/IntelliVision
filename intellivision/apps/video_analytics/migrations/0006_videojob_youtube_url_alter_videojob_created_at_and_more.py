# Generated by Django 5.2.3 on 2025-07-25 08:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('video_analytics', '0005_alter_videojob_job_type'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='videojob',
            name='youtube_url',
            field=models.URLField(blank=True, help_text='The source YouTube URL, if provided by the user.', max_length=512, null=True),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp when the job was created.'),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='emergency_lines',
            field=models.JSONField(blank=True, help_text="For 'emergency_count': A list of line definitions, each with start/end coordinates and direction.", null=True),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='input_video',
            field=models.FileField(help_text='The input video or image file for processing.', upload_to='uploads/'),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='job_type',
            field=models.CharField(choices=[('people_count', 'People Counting'), ('emergency_count', 'Emergency Analysis'), ('car_count', 'Car Counting / ANPR'), ('parking_analysis', 'Parking Lot Analysis'), ('pothole_detection', 'Pothole Detection'), ('food_waste_estimation', 'Food Waste Estimation'), ('room_readiness', 'Room Readiness Analysis'), ('wildlife_detection', 'Wildlife Detection'), ('lobby_detection', 'Lobby / Crowd Detection')], default='people_count', help_text='The type of analytics to be performed on the input file.', max_length=50),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='lobby_zones',
            field=models.JSONField(blank=True, help_text="For 'lobby_detection': A list of zone definitions, each with points and a crowd threshold.", null=True),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='output_image',
            field=models.ImageField(blank=True, help_text='The resulting output image file after processing.', null=True, upload_to='outputs/'),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='output_video',
            field=models.FileField(blank=True, help_text='The resulting output video file after processing.', null=True, upload_to='outputs/'),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='results',
            field=models.JSONField(blank=True, help_text='The JSON results returned by the analytics job.', null=True),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('done', 'Done'), ('failed', 'Failed')], default='pending', help_text='The current status of the job (e.g., pending, processing).', max_length=20),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp when the job was last updated.'),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='user',
            field=models.ForeignKey(help_text='The user who submitted the job.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='video_height',
            field=models.IntegerField(blank=True, help_text='The height of the input video, used for scaling coordinates.', null=True),
        ),
        migrations.AlterField(
            model_name='videojob',
            name='video_width',
            field=models.IntegerField(blank=True, help_text='The width of the input video, used for scaling coordinates.', null=True),
        ),
    ]

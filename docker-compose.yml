version: "3.9"

services:
  db:
    image: postgres:15
    env_file:
      - .env
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  redis:
    image: redis:7
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "127.0.0.1:6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - shared-tmp:/tmp
      - media:/app/intellivision/media
    ports:
      - "8001:8001"  # Maps host port 8001 to container port 8001
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]  # Internal port 8001
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    command: sh -c "python intellivision/manage.py migrate && gunicorn intellivision.wsgi:application --bind 0.0.0.0:8001 --workers 3"
    environment:
      - POSTGRES_DB=intellivision
      - POSTGRES_USER=adminvision
      - POSTGRES_PASSWORD=IntelliVisionAIonOS
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_URL=http://qdrant:6333
      - MONGO_URI=mongodb+srv://toram444444:06nJTevaUItCDpd9@cluster01.lemxesc.mongodb.net/?retryWrites=true&w=majority&appName=Cluster01
      - YOLO_CACHE_DIR=/app/intellivision/apps/video_analytics/models/yolo_cache
      - JOB_OUTPUT_DIR=/app/intellivision/media/outputs

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A intellivision worker --loglevel=info --concurrency=4
    volumes:
      - shared-tmp:/tmp
      - media:/app/intellivision/media
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "celery", "-A", "intellivision", "inspect", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    environment:
      - PYTHONPATH=/app/intellivision
      - POSTGRES_DB=intellivision
      - POSTGRES_USER=adminvision
      - POSTGRES_PASSWORD=IntelliVisionAIonOS
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_URL=http://qdrant:6333
      - MONGO_URI=mongodb+srv://toram444444:06nJTevaUItCDpd9@cluster01.lemxesc.mongodb.net/?retryWrites=true&w=majority&appName=Cluster01
      - YOLO_CACHE_DIR=/app/intellivision/apps/video_analytics/models/yolo_cache
      - JOB_OUTPUT_DIR=/app/intellivision/media/outputs

volumes:
  postgres_data:
  qdrant_data:
  shared-tmp:
  media: